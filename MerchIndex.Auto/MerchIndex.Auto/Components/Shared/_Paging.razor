
<nav aria-label="">
    <ul class="pagination">
        <li class="page-item @(_currentPage == 1 ? "disabled" : null)">
            <a class="page-link" href="" title="Första">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item @(_currentPage == 1 ? "disabled" : null)">
            <a class="page-link" href="" title="Förra">
                <span aria-hidden="true">&lsaquo;</span>
            </a>
        </li>

        @if (_totalPages <= ((2 * _radius) + 1))
        {
            @for (int i = 1; i < _totalPages; i++)
            {
                <li class="page-item @(_currentPage == i ? "active" : null)"><a class="page-link" href="">1</a></li>
            }
        }
        else if (_totalPages > ((2 * _radius) + 1) && _totalPages < (_totalPages - _radius))
        {
        }
        else if (_totalPages > (_totalPages - ((2 * _radius) + 1)))
        {
        }

        <li class="page-item @(_currentPage == _totalPages ? "disabled" : null)">
            <a class="page-link" href="" title="Nästa">
                <span aria-hidden="true">&rsaquo;</span>
            </a>
        </li>
        <li class="page-item">
            <a class="page-link @(_currentPage == _totalPages ? "disabled" : null)" href="" title="Sista">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>

@code {
    [Parameter] public int TotalItems { get; set; } = 1;
    private int _itemsPerPage = 100;
    private int _currentPage = 1;
    private int _totalPages = 1;
    private int _radius = 3;

    protected override void OnParametersSet()
    {
        _totalPages = (int)Math.Ceiling(TotalItems / (double)_itemsPerPage);
    }
}
