
@* <style>
    .page-item,
    .page-item button{
        width: 51px;
        text-align: center;
    }
</style> *@
<hr />
<div class="row">
    <div class="col-sm-12 col-md-6">
        <nav>
            <ul class="pagination">
                <li class="page-item @(CurrentPage == 1 ? "disabled" : null)" @onclick="@(async () => await page(1))">
                    <button class="page-link" title="Första"><span aria-hidden="true">&laquo;</span></button>
                </li>
                <li class="page-item @(CurrentPage == 1 ? "disabled" : null)" @onclick="@(async () => await page(CurrentPage - 1))">
                    <button class="page-link" title="Förra"><span aria-hidden="true">&lsaquo;</span></button>
                </li>

                @if (_totalPages <= ((2 * Radius) + 1))
                {
                    @for (int i = 1; i <= _totalPages; i++)
                    {
                        {
                            var index = i;
                            <li class="page-item @(CurrentPage == i ? "active" : null)" @onclick="@(async () => await page(index))">
                                <button class="page-link">@i</button>
                            </li>
                        }
                    }
                }
                else
                {
                    if (CurrentPage <= (Radius + 1))
                    {
                        for (int i = 1; i <= ((2 * Radius) + 1); i++)
                        {
                            {
                                var index = i;
                                <li class="page-item @(CurrentPage == i ? "active" : null)" @onclick="@(async () => await page(index))">
                                    <button class="page-link">@i</button>
                                </li>
                            }
                        }
                        <li class="page-item" @onclick="@(async () => await page((2 * Radius) + 2))"><button class="page-link"><i class="bi bi-three-dots"></i></button></li>

                    }
                    else if ((CurrentPage > (Radius + 1)) && CurrentPage <= (_totalPages - (Radius + 1)))
                    {
                        <li class="page-item" @onclick="@(async () => await page((CurrentPage - Radius) - 1))"><button class="page-link"><i class="bi bi-three-dots"></i></button></li>

                        for (int i = CurrentPage - Radius; i <= CurrentPage + Radius; i++)
                        {
                            {
                                var index = i;
                                <li class="page-item @(CurrentPage == i ? "active" : null)" @onclick="@(async () => await page(index))">
                                    <button class="page-link">@i</button>
                                </li>
                            }
                        }
                        <li class="page-item" @onclick="@(async () => await page((CurrentPage + Radius) + 1))"><button class="page-link"><i class="bi bi-three-dots"></i></button></li>
                    }
                    else
                    {
                        <li class="page-item" @onclick="@(async () => await page((_totalPages - (2 * Radius)) - 1))"><button class="page-link"><i class="bi bi-three-dots"></i></button></li>
                        for (int i = _totalPages - (2 * Radius); i <= _totalPages; i++)
                        {
                            {
                                var index = i;
                                <li class="page-item @(CurrentPage == i ? "active" : null)" @onclick="@(async () => await page(index))">
                                    <button class="page-link">@i</button>
                                </li>
                            }
                        }
                    }
                }

                <li class="page-item @(CurrentPage == _totalPages ? "disabled" : null)" @onclick="@(async () => await page(CurrentPage + 1))">
                    <button class="page-link" title="Nästa"><span aria-hidden="true">&rsaquo;</span></button>
                </li>
                <li class="page-item" @onclick="@(async () => await page(_totalPages))">
                    <button class="page-link @(CurrentPage == _totalPages ? "disabled" : null)" title="Sista"><span aria-hidden="true">&raquo;</span></button>
                </li>
            </ul>
        </nav>
    </div>
    <div class="col-sm-12 col-md-6 text-end">
        <span class="text-muted">
            Sida @CurrentPage av @_totalPages -
            Visar
            @(((CurrentPage - 1) * ItemsPerPage) + 1)  -
            @(CurrentPage == _totalPages ? (((CurrentPage - 1) * ItemsPerPage) + (TotalItems % ItemsPerPage)) : (((CurrentPage - 1) * ItemsPerPage) + ItemsPerPage))
            (av @TotalItems träffar)
        </span>
    </div>
</div>

@code {
    [Parameter] public int TotalItems { get; set; } = 1;
    [Parameter] public int Radius { get; set; } = 1;
    [Parameter] public int ItemsPerPage { get; set; } = 12; //pageSize
    [Parameter] public int CurrentPage { get; set; } = 1;
    [Parameter] public EventCallback<int> OnPageChanged { get; set; }

    private int _totalPages = 1;

    protected override void OnParametersSet()
    {
        _totalPages = (int)Math.Ceiling(TotalItems / (double)ItemsPerPage);
    }

    private async Task page(int page)
    {
        CurrentPage = page < 1 ? 1 : page;
        CurrentPage = page > _totalPages ? _totalPages : page;

        await _js.InvokeVoidAsync("ScrollToTop");

        await OnPageChanged.InvokeAsync(CurrentPage);
    }
}
